Files in this folder
====================
-Change logs and checksum file
  changelog.day		GIT change log of each project since yesterday.
  changelog.week	GIT change log of each project since last week.
  changelog.biweek 	GIT change log of each project since 2 weeks ago.
  changelog.month	GIT change log of each project since a month ago.

  checksums.md5		This file contains the MD5 checksum for above binary files. After downloading all the files, type "md5sum -c checksums.md5" can help you verify if the downloaded files are ok.

-Source codes
  manifest.xml		Saving the GIT commit number of each project used in this build.

-droid-gcc folder
 Files under droid-gcc folder are built with android-toolchain.
 If this folder is missing, it means that this package wasn't built with android  gcc toolchain.
 root_nfs_internal.tgz 	used for mmc and nfs case

-mrvl-gcc folder
 Files under mrvl-gcc folder are built with marvell gcc toolchain.
 If this folder is missed, it means that this package wasn't built with marvell gcc toolchain.
 
-OBM and UBoot
    TAVOR_LINUX_TOBM.bin		uboot for saarcnevo
    u-boot.bin				NTLoader image
 
-Kernel and Modules for Android [Currently for saarcnevo, zImage.android.slc and zImage.android.mmc is same]
  zImage.android	Kernel image to boot android from EMMC. A root file system is built in. 

-Android File Systems
  system.img_ext3	    Android system image for  file system.
  userdata.img_ext3	    Android userdata image for  file system.
  ramdisk.img		    Android root image for file system.

saarcnevo Flashing images and boot system

Install OBM and Uboot
============================
Burn following binaries to EMMC using Marvell eXtreme Debugger 5.1
Configuration:CPU-JTAG->Target Connection: (usb:).
JTAG->SOC->PXA9xx->PXA978.xdb->Burn Flash->
    Board:pxa978
    Flash:EMMC
    Burn as binary File
    Erase affected blocks
    Enable new BBM
Choose partition 0 & 1
	TAVOR_LINUX_TOBM.bin	    --> address 0x00000
Choose partition 0
	u-boot.bin		    --> address 0x140000


Setup Android on EMMC
===========================
1.Start your favorite terminal emulator with the appropriate 
	COM port set to 115200,8N1. Power on hte board and wait for SAARC>> prompt to appear

3.Enter the following command to upload the system.img into the RAM and burn into flash:
For EMMC, issue the following commands:
SAARC>>tftp zImage
SAARC>>mmc write 0x5000 0x2000

SAARC>>tftp system_ext3.img
SAARC>>mmc write 0x7200 0x38400

SAARC>>tftp userdata_ext3.img
SAARC>>mmc write 0x3f600 0x21c00

SAARC>>tftp ramdisk.img
SAARC>>mmc write 0x7000 0x200

SAARC>>tftp mbr
SAARC>>mmc write 0x0 0x1
Reboot the system.


Note 1: All the following images should copy to the host tftp share directory:
	zImage
	system.img_ext3
	userdata.img_ext3
	ramdisk.img
Note 2: You need to first input "sw" to switch to usb eth, and then, input "tftp zImage", then connect the USB micro-line between the host PC and the saarc board
Note 3: You need to configure the host network interface:
	# ifconfig usb0 192.168.1.100 

Setup Android on NFS
===========================
1)  Burn all images except for ramdisk.img. [zImage.android.mmc can be used]
2)  Setup nfs on host. Host ip is 192.168.1.100 and android rootfs should be put to /nfs/android
3)  unzip root_nfs_internal.tgz to /nfs/android
4)  reboot

FAQ
=====

+Kernel failed to bootup
----------------------------------------------------------------
Update your obm/uboot image and try again.


+How to disable GC860 completly
----------------------------------------------------------------
You can do this by: rm /system/lib/egl/egl.cfg, so android UI and 3D applications will use SW version instead of GC860. To save 16MB from GC860 low level driver, you can: rm /system/lib/modules/galcore.ko
