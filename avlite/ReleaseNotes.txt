===========================================================
Marvell ARMADA 100 AV-A Full System SW release for Android 
Release Notes
Last update: 1/15/2010
===========================================================

1. Platform features
=====================
1.1 Supported Components
- Rebase to google android donut-release branch
- Running Android on UBI FS
- Support Home/Menu/Back/Search key buttons on board 

- Support external USB Keyboard 
- HIFI playback on headset and speaker
- Music Playback through Bluetooth

- Web Browsing through Wifi
- Integrate Copybit Engine for GC300
- Integrate Marvell OpenMax Codecs for OpenCore, including H.264, MPEG-4, AAC, MP3
- Integrate GStreamer 0.10.24, as well as gst-plugins-good, gst-plugins-bad and gst-plugins-ugly

- Integrate Marvell GStreamer Plugins wrap-ups, including AAC, MP3, H.264, H.263, MPEG-4, MPEG2, MJPEG, WMA, WMV, AMRNB, AMRWB

- Support 3G USB modem

- Support G-Sensor rotation

- Support sound recording

- Support video recording and still image capturing
-
 Integrate Helix engine to support playback RMVB and RM file (Not in release package, please consult the AE)

- Support CMMB Playback (Not in release package, please consult the AE)

1.2 BSP features
Uboot
- Boot from Nand/SPI NOR
- Bownload from USB ethernet
- Burn image into Nand/SPI NOR
- Flash Bad block management
- Boot kernel with kernel command line

Linux-2.6.29 Kernel
- MTD devices
  - Support Nand
  - Support Flash Bad block management
  - Support Partition
  - Support UBI FS
- WMMX
  - Support context switch
- Power Management (PM Suspend is disabled from Android as HW ECN is required on AVLite 2.0 board)
  - Support core idle, system sleep for idle mode 
  - Support chip hibernate with power-on key, RTC to wake up system
- LCD (Dump panel)
  - Support base display
  - Support overlay display
  - Support scaling
  - Support backlight control
  - Support FB interface
  - Support pan display
  - Support WVGA resolution display
  - Support RGB565, RGB888Packed, RGB888Unpacked, YUV420planar, YUV422planar and YUV422Packed format. 
- Camera (CCIC)
  - Support V4L2 interface
  - Support Parallel and MIPI interface.
  - Support JPEG format
  - Support YUV420Planar, YUV422Planar and YUV422Packed format. 
  - Support to accept framebuf from user application.
- OV7470 
  - Support to config pixel format
  - Support to switch image/video mode 
  - Support still image with QVGA, VGA and HVGA resolution. 
  - Support video with QVGA, VGA and HVGA resolution. 
- SSP
  - Support to config it as I2S to transfer audio PCM data to outside code. 
- Audio (use WM8960 as outside audio codec)
  - Support ALSA interface
  - Support to playback Audio
  - Support to Recodrd Audio 
  - Support 3.5mm Jack
  - Support headset and speaker detection.
  - Support on-board mic
- Touch screen 
  - Support pen attach, move, detach and time stamp. 
- I2C (two i2c busses)
  - Share/Arbitrate the busses for multi devies.
  - Support RIPC to share the bus with other CPUs.
- UART (FFUART, BTUART)
  - Support tty interface
  - Support tty console
  - Support multi sample rate
  - Support HW flaw control
  - Support both DMA and PIO modes
- USB
  - Host
    - Support to access USB mass storage device
    - Support hot plug-in and remove
    - Support USB hub
  - Client
    - Support ethernet, mass storage, adb and diag drivers.
    - Support composite devie.
    - Support hot attach and detach
- MMC/SD
  - MMC4.3/SD2.0
    - Support partition
    - Support hot plug-in and remove
    - Support lock and unlock
    - Support write protect switch
  - SDIO
    - Support WiFi SDIO card
- WLAN
  - Support SD8688
  - Support WPA 
- BT
  - Support SD8688
  - Support A2DP profile
- Power supply
  - Support battery temperature measurement
  - Support battery capacity measurement. (it is not accurate.)
  - Support USB supply
  - Support USB charging
  - Support poweroff. (NOTE: if the system is not poweroff normally, the next boot time will be longer for the filesystem scan. )
- Sensors
  - g sensor (bm020)


1.2 Release package contents
- ARMADA100_AVA_Android_Alpha1_prebuilt_bin.zip    	:Pre-built bin binaries
  - system_ubi_external.img							:Android system image for UBI
  - userdata_ubi_external.img						:Android user data image for UBI
  - zImage.android.mlc								:kernel image for booting android from MLC
  - u-boot.bin										:uboot

  - ntim_a0_avengers-a_1.6F_256mb_400mhz_mode3_pm_slc.bin: boot from SLC nand
    ASPN_NTLOADER_avengers-a_slc.bin
    desc_a0_avengers-a_1.6F_256mb_400mhz_mode3_pm_slc.txt

  - ntim_a0_avengers-a_1.6F_256mb_400mhz_mode3_pm_spi.bin: boot from SPI NOR 
    ASPN_NTLOADER_spi.bin
    desc_a0_avengers-a_1.6F_256mb_400mhz_mode3_pm_spi.txt


- ARMADA100_AVA_Android_Alpha1_src.tgz             	:Source code tarball (patch based source code)
  - setup_android.sh                               	:Script help to setup Android code base from the xxx_src.tgz and xxx_patches.tgz
  - android_patches.tgz                            	:Marvell patches to Android Projects
  - android_src.tgz								   	:Source code for projects added by Marvell
  - marvell_manifest.xml                           	:Manifest xml file to download android source code from Google as a base
  - kernel_patches.tgz                             	:Marvell patches to kernel_src.tgz
  - kernel_src.tgz								   	:Kernel base source code
  - uboot_patches.tgz                              	:Marvell patches to uboot_src.tgz
  - uboot_src.tgz                                  	:Uboot base source code
  - obm_src.tgz                                    	:OBM source code

2. System Requirements
==========================

2.1 Hardware requirements
- AVA 2.0 board or later

2.2 Software requirements
- Host PC with operating system Ubuntu 8.04 or above

3. Use the prebuilt binaries

============================

3.1 Burning OBM and UBoot
  
  1. You need Marvell Extreme Debug 4.1.1 or higher
  
  2. Burn OBM and U-boot by XDB
     
  1) Use flash burn tool: flash --> burn flash, select: board -- aspen, and flash type - nand
     
  2) Reset "bad block" table and Erase all
     
  3) burn file "ntim_a0_avengers-a_1.6F_256mb_400mhz_mode3_pm_slc.bin"  --> 0x0
     
  4) burn file "ASPN_NTLOADER_avengers-a_slc.bin"		        --> 0x20000
     
  5) burn file "u-boot.bin"						--> 0x40000




3.2 Burn Android on NAND(MLC)
  
  The below commands will burn zImage to SLC, system_ubi and userdata_ubi to MLC.



  Avengers>> nand device 0 
  
  Avengers>> tftp 0x500000 zImage.android.mlc
  
  Avengers>> nand erase 0x100000 0x300000
  
  Avengers>> nand write 0x500000 0x100000 0x300000 

  
  Avengers>> nand device 1
  
  Avengers>> bbt init nand
  
  Avengers>> tftp 0x1000000 system_ubi.img
  
  Avengers>> nand erase 0x1180000 0x7680000
  
  Avengers>> nand write 0x1000000 0x1180000 <size of loaded UBI image>


  Avengers>> tftp 0x1000000 userdata_ubi.img
  
  Avengers>> nand erase 0x8800000 0x13800000
  
  Avengers>> nand write 0x1000000 0x8800000 <size of loaded UBI image>


  Notes:
  
    After tftp an image to device, please remember the size of the image printed by the command. This size will be used in the followed nand write command.
  

4. Use the patch-based source code 
==================================

4.1 Setup Android working directory
  

  First, please go to http://source.android.com to download the "repo" tool and setup the build environment for Android.


  Second, create the android working directory and download the initial code base.
    $ mkdir <android_working_dir>
	 
    $ cd <android_working_dir>
	 
    $ repo init -u git://android.git.kernel.org/platform/manifest -b master
	 
    $ repo sync

  
  Third, switch the code base specified by marvell_manifest.xml
	 
    $ cp <installed_source_dir>/marvell_manifest.xml .repo/manifest/
     
    $ repo init -m marvell_manifest.xml
     
    $ repo sync

  
  Last, apply marvell patches
     
    $ cd <installed_source_dir>
     
    $ ./setup_android.sh <android_working_dir>


4.2 Building the source code
4.2.1 Build Android by:
  First, edit vendor/marvell/avlite/BoardConfig.mk to set BOARD_ENABLE_HELIX to false as helix is not released in this package.
  Second, type as below:
  $ cd <android_working_dir>
  $ . build/envsetup.sh
  $ chooseproduct avlite
  $ export ANDROID_PREBUILT_MODULES=no_kernel_modules
  $ make -j4

  Note: 
  
    Since we haven't built the kernel, there are no kernel modules. While building kernel requires root directory which is generated by building Android.


4.2.2 Build kernel and modules
  $ cd <android_working_dir>
  $ cp -p -r out/target/product/avlite/root kernel/kernel/
  
  $ cd kernel
  
  $ KERNEL_CONFIG=pxa168_android_mlc_defconfig make all
  
  
  Notes:
  
    The zImage locates at kernel/out/



4.2.3 Rebuild Android
  
  $ export ANDROID_PREBUILT_MODULES=kernel/out/modules/
  
  $ make -j4
  
  Notes:
  
    The android system_ubi.img and userdata_ubi.img locate at out/target/product/avlite


4.2.4 Building uboot
  $ cd <android_working_dir>/boot/uboot
  $ make avengers_config
  

  Notes:
  
    The u-boot.bin locate at boot/uboot/u-boot.bin
  
5. Known issues and workarounds
===============================



---------------------------------------------------------------------
Disclaimer and Legal Information:
---------------------------------------------------------------------
No part of this document may be reproduced or transmitted in any 
form or by any means, electronic or mechanical, including 
photocopying and recording, for any purpose, without the express 
written permission of Marvell. Marvell retains the right to make 
changes to this document at any time, without notice. Marvell makes 
no warranty of any kind, expressed or implied, with regard to any 
information contained in this document, including, but not limited 
to, the implied warranties of merchantability or fitness for any 
particular purpose. Further, Marvell does not warrant the accuracy 
or completeness of the information, text, graphics, or other items 
contained within this document.
 
Marvell products are not designed for use in life-support equipment 
or applications that would cause a life-threatening situation if 
any such products failed. Do not use Marvell products in these 
types of equipment or applications.
 
With respect to the products described herein, the user or 
recipient, in the absence of appropriate U.S. government 
authorization, agrees:
 
1) Not to re-export or release any such information consisting of 
technology, software or source code controlled for national 
security reasons by the U.S. Export Control Regulations ("EAR"), 
to a national of EAR Country Groups D:1 or E:2;
 
2) Not to export the direct product of such technology or such 
software, to EAR Country Groups D:1 or E:2, if such technology or 
software and direct products thereof are controlled for national 
security reasons by the EAR; and,
 
3) In the case of technology controlled for national security 
reasons under the EAR where the direct product of the technology 
is a complete plant or component of a plant, not to export to 
EAR Country Groups D:1 or E:2 the direct product of the plant or 
major component thereof, if such direct product is controlled for 
national security reasons by the EAR, or is subject to controls 
under the U.S. Munitions List ("USML").
 
At all times hereunder, the recipient of any such information 
agrees that they shall be deemed to have manually signed this 
document in connection with their receipt of any such information.
 
Copyright (C) 2008. Marvell International Ltd. All rights reserved. 
Marvell, the Marvell logo, Moving Forward Faster, Alaska, 
AnyVoltage, CODECHANNEL, Fastwriter, Datacom Systems on Silicon, 
DSP Switcher, Feroceon, GalNet, INTERPRINT, Libertas, Link Street, 
MOBILEPRINT, NetGX, PHYAdvantage, Prestera, Raising The Technology 
Bar, SUPERPRINT, SUPERQUEUE, The Technology Within, Virtual Cable 
Tester, Yukon, ZJ, ZSCRIPT, ZX, and ZXSTREAM are registered 
trademarks of Marvell. Ants,  Discovery, GalTis, Horizon, Marvell 
Makes It All Possible, RADLAN, UniMAC, and VCT are trademarks of 
Marvell.

All other trademarks are the property of their respective 
owners.

Marvell Semiconductor, Inc.
5488 Marvell Lane
Santa Clara, CA 95054, USA
Tel: 1.408.222.2500
Fax: 1.408.752.9028
Email: commsales@marvell.com
