
Setup Android on SD Card
========================
Follow the below process to make a SD card with Android root file system installed.
1) Plug a SD card to the PC
2) mkfs.ext3 /dev/sdc #your SD card maybe mounted at the other sd device, such as /dev/sdb
3) mount /dev/sdc /mnt/disk
4) tar xvf root_nfs.tgz /tmp; cp -p -r /tmp/root_nfs/* /mnt/disk/;
5) umount /dev/sdc

Second, burning the uImage image.
Marvell>>setenv ipaddr 192.168.1.101
Marvell>>setenv serverip 192.168.1.100
Marvell>>setenv bootargs rootdelay=5 root=/dev/mmcblk0 ip=${ipaddr}:${serverip}::255.255.255.0::eth0:on console=ttyS0,115200 init=/init android video=dovefb:lcd0:1024x600-16@60,lcd1:1024x768-16@60 clcd.lcd0_enable=1 clcd.lcd1_enable=0 pm_disable mem=700M
Marvell>>saveenv
Marvell>>tftp 0x1000000 uImage
Marvell>>bootm 0x1000000
Boot the device with console,

Setup Android on NFS
====================
1) Installed the NFS server on PC host. We prefer to use UBuntu8.04 or 8.10. 9.04 is not recommended.
2) mkdir /srv
3) add below line to /etc/exports
  /srv            *(rw,sync,no_root_squash,no_subtree_check)
  Notes: be sure you specify all the optional paramters above.
4) tar xvf root_nfs.tgz /tmp/
5) mv /tmp/root_nfs/* /srv/nfs/

Last, you should use zImage.android.mmc to boot the kernel and then set the bootargs variable in UBoot.
(Notes:if adb is enabled in the kernel, this way doesn't work as the usb net won't work as the usb is used for adb)

Marvell>>setenv ipaddr 192.168.1.101
Marvell>>setenv serverip 192.168.1.100
Marvell>>setenv bootargs root=/dev/nfs rootfstype=nfs nfsroot=${serverip}:/srv/nfs/ ip=${ipaddr}:${serverip}::255.255.255.0::eth0:on console=ttyS0,115200 init=/init android video=dovefb:lcd0:1024x600-16@60,lcd1:1024x768-16@60 clcd.lcd0_enable=1 clcd.lcd1_enable=0 pm_disable mem=700M
Marvell>>saveenv
Marvell>>tftp 0x1000000 uImage
Marvell>>bootm 0x1000000

Notes:if you are using a different host ip address and exported a different NFS directory, you should change the above command line accordingly.

Notes:if you are using an AVD1 board with only 512M memory, you must remove "mem=700M" in bootargs env.

printenv will list all the environment variables, which can be used to verify what current value of bootargs is.

Step by step to write kernel image to SPI flash and boot from SPI flash
================================
Marvell>>setenv ipaddr 192.168.1.101
Marvell>>setenv serverip 192.168.1.100
Marvell>>tftp 0x2000000 uImage
Marvell>>sflash protect off
Marvell>>sflash erase 0xa-0x3a
Marvell>>sflash write 0x2000000 0xa0000 {actual length of linux kernel image in hex}
Marvell>>sflash protect on
Marvell>>setenv bootcmd 'sflash read 0xa0000 0x2000000 0x300000;bootm 0x2000000'
Marvell>>saveenv

Known Issues about Android
=========================================
+ mm06 cannot be run
-------------------------------------------------------------
  Symptom: No output when running mm06 application

  Reason: mm06 needs to write something to /sdcard/mm06. But it failed due to access check.

  Workaround: cd /sdcard; chmod 777 mm06; chmod 777 mm06/*

+ DLNA demo video streaming may not success
-------------------------------------------------------------
  Symptom: We cannot see viedo output on Dongle side

  Reason: Sometimes GStreamer's registry file is wrong.

  Workaround: Reboot Android.

+ Old cupcake Android application cannot run full screen on Donut
-------------------------------------------------------------
  Symptom: Android application cannot run full screen on Donut

  Reason: It's the design change of Android.

  Workaround: Simply disable Compatibility Mode in Spare Parts Application, turn it off and reboot.

+ Wifi can't be enabled if you are using UBuntu9.04 or higher
-------------------------------------------------------------
  Symptom: When you enabled the Wifi, use the logcat you can see a message "Error changing group ownership of wpa_supplicant.conf to 1001:Operation not permitted." This only happens if your host PC is running with UBuntu9.04. We tested UBuntu8.04 and UBuntu8.10, which doesn't have this issue.
  Reason: We don't know the exact reason why chown doesn't work on UBuntu9.04 but works on 8.04 or 8.10.

  Workaround:In the console, you can copy the wpa_supplicant.conf from /system/etc/wifi/wpa_supplicant.conf to /data/misc/wifi/wpa_supplicant.conf and chmod 777 wpa_supplicant.conf.

-------------------------------------------------------------
  Symptom: When you enabled the Wifi, use the logcat you can see a message "Error changing group ownership of wpa_supplicant.conf to 1001:Operation not permitted." This only happens if your host PC is running with UBuntu9.04. We tested UBuntu8.04 and UBuntu8.10, which doesn't have this issue.
  Reason: We don't know the exact reason why chown doesn't work on UBuntu9.04 but works on 8.04 or 8.10.

  Workaround:In the console, you can copy the wpa_supplicant.conf from /system/etc/wifi/wpa_supplicant.conf to /data/misc/wifi/wpa_supplicant.conf and chmod 777 wpa_supplicant.conf.


+ Calibration data can't be saved, any setting data can't be saved.
------------------------------------------------------------------
  Symptom: You calibrate the touch screen with Calibration app, and the screen works well. But at next boot, you have to calibrate it again. The calibration data isn't stored. 

  Reason: Actually the calibration data is saved to persistent property file. But just fail to read it from persistent property at boot. This seems a limitation of NFS file system on support opendir() function.

  Workaround: no workaround is available right now, just recalibrate it.

+ Android cannot boot up.
------------------------------------------------------------------
  Symptom: The screen hangs on "Android" logo, kernel report an issue. 

  Reason: AVD1 has two different boards, one is 512M memory, another is 1G memory. Which causes the different behavior in Kernel.

  Fix: If you are using an AVD1 board with only 512M memory, you must remove "mem=700M" in bootargs env.

+Media on SD Card can't be seen by Video/Music/Photo App
------------------------------------------------------------
  Symptom: Plug the SD card to device, with media files on SD card, but Video/Music/Photo App can't see anything.
  Reason: Mounting SD card is disabled in root_nfs.tgz on purpose. As if Android is running on SD card, enable mounting of SD card may cause confliction. So by default we disable it in root_nfs.tgz. 
  Workaround:You can enable it manually by edit /system/etc/vold.conf, uncomment the section of volume_sdcard.

FAQ
=====

+How can I disable GC600 engine completely?
---------------------------------------------------
You can do this by: rm /system/lib/libhgl.so, so that Android GUI system won't use GC600 hardware 3D engine. 

+How can I configure video output path?
---------------------------------------------------------------
The opencore,GStreamer and Helix engine uses the property video.accelerate.hw to determine the video output path.
If the property is set to 'overlay', it will use the overlay engine to output the video.
If it is other values, it will use software color conversion and let surfaceflinger to output the video frame.

+How to enable the video playback profiling?
--------------------------------------------
After the android boot up, type in console:
$setprop enable.pvplayer.profiling 1
$logcat &

While playback a video clip, the profiling data will be output to console.

+How to enable the fake ac and battery status?
----------------------------------------------
If the battery service reports wrong battery status, Android power off the system automatically. You can use the below way to request battery service to report fake status to cheat android system.

Open /init.rc, add the below line before class_start default:
setprop battery.fake_ac true
