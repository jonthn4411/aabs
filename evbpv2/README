Files in this folder
====================
-Change logs and checksum file
  changelog.day		GIT change log of each project since yesterday.
  changelog.week	GIT change log of each project since last week.
  changelog.biweek 	GIT change log of each project since 2 weeks ago.
  changelog.month	GIT change log of each project since a month ago.

  checksums.md5		This file contains the MD5 checksum for above binary files. After downloading all the files, type "md5sum -c checksums.md5" can help you verify if the downloaded files are ok.

-Source codes
  manifest.xml		Saving the GIT commit number of each project used in this build.

-droid-gcc folder
 Files under droid-gcc folder are built with android-toolchain.
 If this folder is missing, it means that this package wasn't built with android  gcc toolchain.
 root_nfs_internal.tgz 	used for mmc and nfs case

-mrvl-gcc folder
 Files under mrvl-gcc folder are built with marvell gcc toolchain.
 If this folder is missed, it means that this package wasn't built with marvell gcc toolchain.
 
-OBM and UBoot
  u-boot.bin			uboot for evbpv2
  TAVOR_LINUX_NTOBM.bin		NTLoader image
  
-Kernel and Modules for Android [Currently for evbpv2, zImage.android.slc and zImage.android.mmc is same]
  zImage.android.slc	Kernel image to boot android from SLC. A root file system is built in. 
  zImage.android.mmc    Kernel image for mmc and nfs usage

-Android File Systems
  system.img		 Android system image for  file system.
  userdata.img		 Android userdata image for  file system.
  ramdisk.img		 Android root image for file system.

evbpv2 Flashing images and boot system

Install OBM and Uboot
============================
1. install XDB EMU 2.1 from: \\sh1sbak009\Product_Integration\Tools\EMU 2.1, configuration file: ttc_ptap_mhk.xsf
2.Burn following binaries to flash by using the Marvell eXtreme Debugger.
    TAVOR_LINUX_NTOBM.bin 	--> flash address 0x00000
    u-boot.bin			--> flash address 0x80000
	
Setup Android on OneNAND
===========================
1.Start your favorite terminal emulator with the appropriate 
	COM port set to 115200,8N1. Power on hte board and wait for TavorPV2>> prompt to appear

3.Enter the following command to upload the system.img into the RAM and burn into flash:
For NAND flash, issue the following commands:
Use tftp to down load images:

TavorPV2>>tftp zImage
TavorPV2>>onenand erase 0x920000 0x300000
TavorPV2>>onenand write 0x80800000 0x920000 0x300000

TavorPV2>>tftp ramdisk.img
TavorPV2>>onenand erase 0xc0000 0x40000
TavorPV2>>onenand write 0x80800000 0xc0000 0x40000

TavorPV2>>tftp system.img
TavorPV2>>onenand erase 0x0c20000 0x7000000
TavorPV2>onenand write.yaffs 0x80800000 0x0c20000 <actual-image-size>(Note: ony hex supported)

TavorPV2>>tftp userdata.img
TavorPV2>>onenand erase 0x7c20000 0x7000000
TavorPV2>>onenand write.yaffs 0x80800000 0x7c20000 <actual-image-size>(Note: ony hex supported)

Note 1: All the following images should copy to the host tftp share directory:
	zImage
	system.img
	userdata.img
	ramdisk.img
Note 2: You need to first input "sw" to switch to usb eth, and then, input "tftp zImage", then connect the USB micro-line between the host PC and the evb3pv2 board
Note 3: You need to configure the host network interface:
	# ifconfig usb0 192.168.1.100 

Setup Android on NFS
===========================
1)  Burn all images except for ramdisk.img. [zImage.android.mmc can be used]
2)  Setup nfs on host. Host ip is 192.168.1.100 and android rootfs should be put to /nfs/android
3)  unzip root_nfs_internal.tgz to /nfs/android
4)  reboot

FAQ
=====

+Kernel failed to bootup
----------------------------------------------------------------
Update your uboot image and try again.

+How to disable GC500 completly
----------------------------------------------------------------
You can do this by: rm /system/lib/egl/egl.cfg, so android UI and 3D applications will use SW version instead of GC500. To save 16MB from GC500 low level driver, you can: rm /system/lib/modules/galcore.ko
