#!/bin/sh

print_usage() {
    echo "Usage: extract_patches <output> <changelog> [-e LIST ] [--REPOPATH]"
    echo "-e LIST, the excluded list seperated by blank"
    echo "--REPOPATH, extract patches into git repository pathes,"
    echo "            instead of project pathes"
    echo "Please run me in the root directory of android source code.    "
}

if [ $# -lt 2 ] || [ ! -f $2 ] || ([ $# -gt 2 ] && [ "$3" != "-e" -a "$3" != "--REPOPATH" ]); then
    print_usage
    exit 1
fi

OUTPUT=$1
CHGLOG=$2
shift 2
excluded=0
repo_path=0
top_dir=`pwd`

while [ $# -gt 0 ]
do
    if [ $1 = "--REPOPATH" ]; then
        repo_path=1
    elif [ $1 = "-e" ]; then
        excluded=1
    elif [ $excluded = 1 ]; then
        if [ -z "$excluded_prjs" ]; then
	    excluded_prjs=$1
        else
	    excluded_prjs=$excluded_prjs" "$1
        fi
    fi
    shift
done

patches=$(awk -v elist="$excluded_prjs" -F[ ' \
         BEGIN  {  split(elist, excluded, " ") } \
         /prj:/ {  ignored=0; \
                   gpath=$1; \
                   gsub(/(-prj:)| /, "", gpath); \
                   for (i in excluded) { \
                       if (excluded[i]":" == gpath) { \
                           ignored=1; \
                           break; \
                       } \
                   } \
                   pset=""; \
                 } \
         /\*>/ { if (ignored == 0) { \
                    patch=$(NF-1); \
                    gsub(/]/, "", patch); \
                    patch=gpath""patch; \
                    pset=patch" "pset; \
                } \
              } \
         /\*-/ { if (ignored == 0) print pset } ' \
    $CHGLOG)

for p in $patches
do
    prj=`echo $p | awk -F: '{ print $1 }'`
    if [ "$prj" != "$prev_prj" ]; then
        if [ -n "$prev_prj" ]; then
            prev_prj=
        fi
        cd $top_dir
        num=1
        path=`repo list $prj | awk -F: '{ print $1 }'`
        if [ -z "$path" ]; then
            echo "Invalid project: $prj."
            continue;
        fi
        prev_prj=$prj
        if [ $repo_path = 0 ]; then
            PRJ_OUTPUT=$OUTPUT/$path
        else
            PRJ_OUTPUT=$OUTPUT/$prj
        fi
	mkdir -p $PRJ_OUTPUT
	cd $path #dash doesn't support pushd/popd
    fi
    echo $p | awk -F: '{ print $2 }' | xargs git format-patch -o $PRJ_OUTPUT -1 --start-number $num
    num=$((num+1))
done
